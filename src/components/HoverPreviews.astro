<script>
  // @ts-nocheck
  function initializeHoverPreviews() {
    let previewContainer;
    let previewIframe;
    let previewHeader;
    let hideTimeout;

    function isMobile() {
      return window.innerWidth < 769; // my own mobile breakpoint
    }

    function createPreviewElements() {
      // if (!previewContainer) {
      previewContainer = document.createElement("div");
      previewContainer.style.position = "absolute";
      previewContainer.style.width = "480px";
      previewContainer.style.height = "320px";
      previewContainer.style.border = "2px solid var(--teal)";
      previewContainer.style.background = "#fff";
      previewContainer.style.boxShadow = "4px 4px 0px var(--teal)";
      previewContainer.style.display = "none";
      previewContainer.style.zIndex = "1000";
      previewContainer.style.overflow = "hidden";

      previewHeader = document.createElement("div");
      previewHeader.style.background = "#ececec";
      previewHeader.style.color = "var(--red)";
      previewHeader.style.fontFamily = "JetBrains Mono, monospace";
      previewHeader.style.fontWeight = "bold";
      previewHeader.style.paddingLeft = "10px";
      previewHeader.style.borderBottom = "1px solid var(--teal)";

      previewIframe = document.createElement("iframe");
      previewIframe.style.width = "100%";
      previewIframe.style.height = "100%";
      previewIframe.style.border = "none";
      previewIframe.style.overflow = "scroll";

      previewContainer.appendChild(previewHeader);
      previewContainer.appendChild(previewIframe);
      document.body.appendChild(previewContainer);

      previewContainer.addEventListener("mouseenter", () => {
        clearTimeout(hideTimeout); // Keep the preview visible
      });

      previewContainer.addEventListener("mouseleave", () => {
        hidePreview(); // Hide preview when mouse leaves the container
      });
      // }
    }

    function extractMainContent(url) {
      // wait until the iframe loads

      previewIframe.addEventListener("load", () => {
        const iframeDoc =
          previewIframe.contentDocument || previewIframe.contentWindow.document;
        const mainContent = iframeDoc.querySelector("main");

        if (mainContent) {
          iframeDoc.body.innerHTML = "";
          const newContent = document.createDocumentFragment();
          newContent.appendChild(mainContent.cloneNode(true));

          iframeDoc.body.appendChild(newContent);

          const links = iframeDoc.querySelectorAll("a");
          links.forEach((link) => {
            link.classList.add("no-prev");
            link.setAttribute("target", "_blank");
          });
        } else {
          console.warn("No <main> element found in the iframe content.");
        }
      });
    }

    function showPreview(url, x, y) {
      // skip if mobile
      if (isMobile()) return;
      createPreviewElements();
      const viewportHeight = window.innerHeight;
      const bottomTH = viewportHeight * 0.85;

      if (y > bottomTH) {
        previewContainer.style.top = `${y - 320}px`;
      } else {
        previewContainer.style.top = `${y - 1}px`;
      }

      previewContainer.style.left = `${x}px`;
      previewContainer.style.display = "block";
      previewIframe.src = url + "#post-title";
      previewHeader.innerHTML = url;
      // extractMainContent(url);
    }

    function hidePreview() {
      hideTimeout = setTimeout(() => {
        if (previewContainer) {
          previewContainer.style.display = "none";
        }
      }, 500); // delay to allow navigation between link and preview
    }

    function handleMouseEnter(event) {
      // clearTimeout(hideTimeout);

      const url = event.currentTarget.getAttribute("href");
      const rect = event.currentTarget.getBoundingClientRect();
      const x = rect.right + window.scrollX; // scroll offsets
      const y = rect.bottom + window.scrollY; // scroll offsets

      setTimeout(() => {
        showPreview(url, x, y);
      }, 750);
    }

    function handleMouseLeave() {
      hidePreview();
    }

    function addHoverListeners() {
      const hoverLinks = document.querySelectorAll("a:not([class])"); // Select all anchor elements without a class attribute
      hoverLinks.forEach((link) => {
        link.removeEventListener("mouseenter", handleMouseEnter); // Remove previous listeners if any
        link.removeEventListener("mouseleave", handleMouseLeave); // Remove previous listeners if any

        link.addEventListener("mouseenter", handleMouseEnter);
        link.addEventListener("mouseleave", handleMouseLeave);
      });
    }

    function initializeHoverPreviews() {
      // skip if mobile
      if (isMobile()) return;

      addHoverListeners();

      // const observer = new MutationObserver(() => {
      //   addHoverListeners(); // Re-attach hover listeners if DOM changes
      // });
      //
      // observer.observe(document.body, {
      //   childList: true,
      //   subtree: true,
      // });
    }

    document.addEventListener("DOMContentLoaded", initializeHoverPreviews);
    window.addEventListener("pageshow", initializeHoverPreviews);
    window.addEventListener("popstate", initializeHoverPreviews);

    // document.addEventListener("astro:page-load", () => {
    //   initializeHoverPreviews();
    // });
  }

  initializeHoverPreviews();
</script>
