---
import { getCollection } from "astro:content";
import Base from "../layouts/Base.astro";
import { datum, zeit } from "../../utils/zeit.ts";
import Nav from "../components/Nav.astro";

// GET ALL ARTICLES FROM articles COLLECTION
const allArticles = await getCollection("articles", ({ data }: { data: any }) => {
  return data.draft !== true;
});
allArticles.sort((a: any, b: any) => b.data.pubDate - a.data.pubDate);

// GET ALL NOTES FROM notes COLLECTION
const allNotes = await getCollection("notes", ({ data }: { data: any }) => {
  return data.draft !== true;
});
allNotes.sort((a: any, b: any) => b.data.pubDate - a.data.pubDate);
const pageTitle = "kenan.fyi | posting occasionally";
---

<Base pageTitle={pageTitle}>
  <Nav />
  <section>
    <p><img src="/img/banner-8.png" alt="" class="banner" /></p>
    <p>Hey! This is my playground where I try new stuff out and keep learning about web technologies plus posting some thoughts occasionally.</p>
    <p>
      There are some metadata inside the posts, which gives the reader some ideas about the articles. Like the status which shows if the article is completed or not. Also the update date. I will
      implement a more friendly metadata display in the future. Since I am building in public, I do my updates in the prod.
    </p>
    <p>✶</p>
    <table class="index-table">
      <thead>
        <tr><td class="index-header" colspan="3">Index / <a href="/articles/">Articles</a></td></tr>
      </thead>
      <tbody>
        {
          allArticles.map((article: any) => (
            <tr>
              <td class="index-date">{datum(article.data.pubDate)}</td>
              <td>{article.data.title}</td>
              <td class="index-read">
                <a href={`/articles/${article.slug}/`}>Read -></a>
              </td>
            </tr>
          ))
        }
      </tbody>
    </table>

    <p>✶</p>

    <table class="index-table">
      <thead>
        <tr><td class="index-header" colspan="3">Index / <a href="/notes/">Notes</a></td></tr>
      </thead>
      <tbody>
        {
          allNotes.map((note: any) => (
            <tr>
              <td class="index-date">{datum(note.data.pubDate)}</td>
              <td>{note.data.title}</td>
              <td class="index-read">
                <a href={`/notes/${note.slug}/`}>Read -></a>
              </td>
            </tr>
          ))
        }
      </tbody>
    </table>
  </section>
</Base>
