---
import { getCollection } from "astro:content";
import Base from "../layouts/Base.astro";
import { datum, zeit } from "../../utils/zeit.ts";
const allArticles = await getCollection("articles", ({ data }) => {
  return data.draft !== true;
});
allArticles.sort((a: any, b: any) => b.data.pubDate - a.data.pubDate);
const pageTitle = "main";
---

<Base pageTitle={pageTitle}>
  <>
    <p>Hey,</p>
    <p>
      This blog is my playground where I try new stuff out and keep learning
      about web technologies plus posting some thoughts occasionally.
    </p>
    There are some metadata inside the posts, which gives the reader some ideas about
    the articles. Like the status which shows if the article is completed or not.
    Also the update date. I will implement a more friendly metadata display in the
    future. Since I am building in public, I do my updates in the prod.

    <div style="text-align: center; margin-top: 24px">✶</div>
    ✯ <i>Pinned:</i>
    <p>
      <span class="date">05 Jun 2024</span>
      <span>・</span>
      <span><a href="/articles/junited-2024">Junited 2024</a></span>
    </p>
    <div style="text-align: center; margin-top: 24px">✶</div>
    <p>
      <i>Some recent posts:</i>
    </p>
    <ul class="articles">
      {
        allArticles.map((article) => (
          <div class="articleList">
            <li class="article">
              <span class="date">{datum(article.data.pubDate)}</span>
              <span>・</span>
              <span>
                <a href={`/articles/${article.slug}/ `} class="no-prev">
                  {article.data.title}
                </a>
              </span>
              {datum(article.data.updated) === datum(article.data.pubDate) ? (
                ""
              ) : (
                <span class="article-updated-text">
                  {"(updated: " + zeit(article.data.updated) + ")"}
                </span>
              )}
            </li>
          </div>
        ))
      }
    </ul>
  </>
</Base>
