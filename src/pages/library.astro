---
import "../styles/fonts.css";
import "../styles/colors.css";
import "../styles/global.css";
import BasePage from "../layouts/BasePage.astro";
import { mmYY } from "../../utils/zeit.ts";
import { Icon } from "astro-icon/components";

const LITERAL = import.meta.env.Literal;

var bearer = "Bearer " + LITERAL;

const BOOKS_QUERY = `
  fragment BookParts on Book {
    id
    slug
    title
    subtitle
    description
    isbn10
    isbn13
    language
    pageCount
    publishedDate
    publisher
    cover
    authors {
      id
      name
    }
    gradientColors
  }

  fragment ReadingStateParts on ReadingState {
    id
    status
    bookId
    profileId
    createdAt
  }

  query myReadingStates {
    myReadingStates {
      ...ReadingStateParts   # find fragments below
      book {
        ...BookParts   # find fragments below
      }
    }
  }

`;

let profileId = "cm6b8ukdr1205880h00hlb44f3b";

const response = await fetch("https://literal.club/graphql/", {
  method: "POST",
  headers: {
    Authorization: bearer,
    "Content-Type": "application/json",
    // Add any other headers you need (e.g., authorization)
  },
  body: JSON.stringify({ query: BOOKS_QUERY }),
});

const d = await response.json();
console.log(d);

interface BookItem {
  status: string;
  createdAt: string;
  book: {
    title: string;
    authors: { name: string }[];
    cover: string;
    description: string;
    publishedDate: string;
    isbn13: string;
  };
}

const statusLabels: Record<BookItem["status"], string> = {
  IS_READING: "Reading",
  FINISHED: "Finished",
  WANTS_TO_READ: "Wanna read",
};

const books = d.data.myReadingStates;

// books.sort((a: any, b: any) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());

const pageTitle = "library";
---

<BasePage pageTitle={pageTitle}>
  <section>
    <h1>{pageTitle}</h1>
    <i>under construction</i><br/>
    <Icon name="ph:warning-duotone" size="64"/>
    <p>
      Library currently just returns the default description and the status where I am pulling the data from. Therefore there is currently no rating information. I'm working on implementing a rating
      algorithm, so that it is automatically pulled from the service I use which is <a href="https://literal.club/pages/api">LiteralÂ°</a>.
    </p>

    <div class="accordion">
      <div class="accordion-item">
        <div class="accordion-header accordion-bg">
            <div class="col">Cover</div>
            <div class="col">Title</div>
        </div>
      </div>
      {
        books.map((book: BookItem) => (
          <div class="accordion-item">
            <div class="accordion-header">
                <div class="col"><img src=`${book.book.cover}` width="80" /></div>
                <div class="col">
                <a href={`https://openlibrary.org/search?isbn=${book.book.isbn13}`}>{book.book.title}</a><br/>
                {book.book.authors[0].name} <br/>
                <span class="status">{statusLabels[book.status]}</span>
                </div>
            </div>
            <div class="accordion-content">
              <p>{book.book.description === null ? "--no description--" : book.book.description}</p>
            </div>
        </div>
        ))
      }
    </div>
  </section>
</BasePage>
